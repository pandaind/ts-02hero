{
  "compilerOptions": {
    /* Visit https://aka.ms/tsconfig.json to read more about this file */

    /* Basic Options */
    "target": "ES2022",                          /* Set the JavaScript language version for emitted JavaScript */
    "lib": ["ES2022", "DOM"],                    /* Specify a set of bundled library declaration files */
    "allowJs": true,                             /* Allow javascript files to be compiled */
    "checkJs": false,                            /* Report errors on .js files */
    "jsx": "preserve",                           /* Specify what JSX code is generated */
    "declaration": true,                         /* Generate .d.ts files from TypeScript and JavaScript files */
    "declarationMap": true,                      /* Create sourcemaps for d.ts files */
    "sourceMap": true,                           /* Create source map files for emitted JavaScript files */
    "outDir": "./dist",                          /* Specify an output folder for all emitted files */
    "rootDir": "./",                             /* Specify the root folder within your source files */
    "composite": false,                          /* Enable constraints for TypeScript projects */
    "tsBuildInfoFile": "./dist/tsconfig.tsbuildinfo", /* Specify the folder for .tsbuildinfo incremental compilation files */
    "removeComments": false,                     /* Disable emitting comments */
    "noEmit": false,                             /* Disable emitting files from a compilation */
    "importHelpers": true,                       /* Allow importing helper functions from tslib once per project */
    "importsNotUsedAsValues": "remove",          /* Specify emit/checking behavior for imports that are only used for types */
    "downlevelIteration": true,                  /* Emit more compliant, but verbose JavaScript for iteration */
    "sourceRoot": "",                            /* Specify the root path for debuggers to find the reference source code */
    "mapRoot": "",                               /* Specify the location where debugger should locate map files instead of generated locations */
    "inlineSourceMap": false,                    /* Emit the source map as an inline source map */
    "inlineSources": false,                      /* Emit the source alongside the sourcemaps within a single file */

    /* Strict Type-Checking Options */
    "strict": true,                              /* Enable all strict type-checking options */
    "noImplicitAny": true,                       /* Enable error reporting for expressions and declarations with an implied 'any' type */
    "strictNullChecks": true,                    /* When type checking, take into account 'null' and 'undefined' */
    "strictFunctionTypes": true,                 /* When assigning functions, check to ensure parameters and the return values are subtype-compatible */
    "strictBindCallApply": true,                 /* Check that the arguments for 'bind', 'call', and 'apply' methods match the original function */
    "strictPropertyInitialization": true,       /* Check for class properties that are declared but not set in the constructor */
    "noImplicitReturns": true,                   /* Enable error reporting for codepaths that do not explicitly return in a function */
    "noFallthroughCasesInSwitch": true,          /* Enable error reporting for fallthrough cases in switch statements */
    "noUncheckedIndexedAccess": false,           /* Include 'undefined' in index signature results */
    "noImplicitOverride": true,                  /* Ensure overriding members in derived classes are marked with an override modifier */
    "noPropertyAccessFromIndexSignature": false, /* Enforces using indexed accessors for keys declared using an indexed type */

    /* Module Resolution Options */
    "moduleResolution": "node",                  /* Specify how TypeScript looks up a file from a given module specifier */
    "baseUrl": "./",                             /* Specify the base directory to resolve non-relative module names */
    "paths": {
      "@/*": ["./src/*"],
      "@examples/*": ["./examples/*"],
      "@utils/*": ["./src/utils/*"]
    },                                           /* Specify a set of entries that re-map imports to additional lookup locations */
    "rootDirs": [],                              /* Allow multiple folders to be treated as one when resolving modules */
    "typeRoots": ["./node_modules/@types"],      /* Specify multiple folders that act like './node_modules/@types' */
    "types": ["node"],                           /* Specify type package names to be included without being referenced in a source file */
    "allowSyntheticDefaultImports": true,        /* Allow 'import x from y' when a module doesn't have a default export */
    "esModuleInterop": true,                     /* Emit additional JavaScript to ease support for importing CommonJS modules */
    "preserveSymlinks": true,                    /* Disable resolving symlinks to their realpath */
    "allowUmdGlobalAccess": false,               /* Allow accessing UMD globals from modules */

    /* Source Map Options */
    // "sourceRoot": "",                         /* Specify the root path for debuggers to find the reference source code */
    // "mapRoot": "",                            /* Specify the location where debugger should locate map files instead of generated locations */
    // "inlineSourceMap": false,                 /* Emit the source map as an inline source map */
    // "inlineSources": false,                   /* Emit the source alongside the sourcemaps within a single file; requires '--inlineSourceMap' or '--sourceMap' to be set */

    /* Experimental Options */
    "experimentalDecorators": true,              /* Enable experimental support for TC39 stage 2 draft decorators */
    "emitDecoratorMetadata": true,               /* Emit design-type metadata for decorated declarations in source files */

    /* Advanced Options */
    "skipLibCheck": true,                        /* Skip type checking of declaration files */
    "forceConsistentCasingInFileNames": true,    /* Ensure that casing is correct in imports */
    "resolveJsonModule": true,                   /* Enable importing .json files */
    "isolatedModules": true,                     /* Ensure that each file can be safely transpiled without relying on other imports */
    "allowImportingTsExtensions": false,         /* Allow imports to include TypeScript file extensions */
    "noResolve": false,                          /* Disallow 'import's, 'require's or '<reference>'s from expanding the number of files TypeScript should add to a project */

    /* Emit Options */
    "noEmitOnError": true,                       /* Disable emitting files if any type checking errors are reported */
    "preserveConstEnums": true,                  /* Preserve const enums in generated code (required when isolatedModules is true) */
    "declarationDir": "./dist/types",            /* Specify the output directory for generated declaration files */
    "preserveValueImports": false,               /* Preserve unused imported values in the JavaScript output that would otherwise be removed */

    /* Completeness */
    "skipDefaultLibCheck": false,                /* Skip type checking .d.ts files that are included with TypeScript */
    "exactOptionalPropertyTypes": false,         /* Interpret optional property types as written, rather than adding 'undefined' */

    /* Module Options */
    "module": "ESNext",                          /* Specify what module code is generated */
    "moduleDetection": "auto"                    /* Control what method is used to detect module-format JS files */
  },
  "include": [
    "src/**/*",
    "*.ts"
  ],
  "exclude": [
    "node_modules",
    "dist",
    "examples/**/*",
    "**/*.test.ts",
    "**/*.spec.ts",
    "jest.setup.ts",
    "jest.config.js"
  ],
  "compileOnSave": true,
  "ts-node": {
    "esm": true,
    "compilerOptions": {
      "module": "ESNext"
    }
  }
}